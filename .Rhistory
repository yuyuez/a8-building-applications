# Using the `mean` function, create a variable `num_mean` that is the mean of your vector `numbers`
casualIntro
# Foundational R skills assignment
# Installing packages -------------------------------
install.packages('stringr')
# Install and load the the stringr package, which has a variety of built in functions that make working with string variables easier.
library(stringr)
# Defining variables -------------------------------
myVar <- 'My information'
# Create a numeric variable myAge that is equal to your age
myAge <- 19
# Create a variable myName that is equal to your first name
myName <- 'Yuyue'
# Using multiplication, create a variable minutes_in_a_day that is equal to the number of minutes in a day
minutes_in_a_day <- 60 * 24
# Working with functions -------------------------------
# Write a function called introduction that takes in two arguments, name, and age. This function should return a string value that says "Hello, my name is {name}, and I'm {age} years old".
introduction <- function(name,age) {
return(paste("Hello, my name is ",name," and I'm",age,"years old"))
}
# Create a variable myIntro by passing your variables myName and myAge into your introduction function
myIntro <- introduction(myName,myAge)
# Create a variable casualIntro by substituting "Hello, my name is ", with "Hey, I'm" in your myIntro variable
casualIntro <- paste("Hey, I'm", str_sub(myIntro,19,str_length(myIntro)))
# Create a new variable 'loud_intro', which is your myIntro variable in all upper-case letters
loud_intro <- toupper(myIntro)
# Create a new variable 'quiet_intro', which is your 'myIntro' variable in all lower-case letters
quite_intro <- tolower(myIntro)
# Create a new variable 'capitalized', which is your 'myIntro' variable with each word capitalized (hint: use the stringr function str_to_title)
capitalized <- str_to_title(myIntro)
# Using the stringr `str_count` function, create a variable `occurances` that stores the number of times the letter "e" appears in your `myIntro` variable
occurances <- str_count(myIntro, "e")
# Write another function `double` that takes in a variable and returns that variable times two
double <- function(height) {
return(height * 2)
}
# Create a variable `twenty` by passing the number 10 to your `double` function
twenty <- double(10)
# Write another function `third_power` that takes in a value and returns that value cubed
third_power <- function(length) {
return(length ^ 3)
}
# Create a variable `twenty_seven` by passing the number 3 to your `third_power` function
twenty_seven <- third_power(3)
# Vectors -------------------------------
# Create a vector movies that contains the names of six movies you like
# Create a vector top_three that only contains the first three movies in the vector
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
# Create a vector `numbers` that is the numbers 700 through 999
# Using the built in `length` function, create a variable `len` that is equal to the length of your vector `numbers`
# Using the `mean` function, create a variable `num_mean` that is the mean of your vector `numbers`
install.packages("stringr")
# Foundational R skills assignment
# Installing packages -------------------------------
install.packages('stringr')
# Install and load the the stringr package, which has a variety of built in functions that make working with string variables easier.
library(stringr)
# Defining variables -------------------------------
myVar <- 'My information'
# Create a numeric variable myAge that is equal to your age
myAge <- 19
# Create a variable myName that is equal to your first name
myName <- 'Yuyue'
# Using multiplication, create a variable minutes_in_a_day that is equal to the number of minutes in a day
minutes_in_a_day <- 60 * 24
# Working with functions -------------------------------
# Write a function called introduction that takes in two arguments, name, and age. This function should return a string value that says "Hello, my name is {name}, and I'm {age} years old".
introduction <- function(name,age) {
return(paste("Hello, my name is ",name," and I'm",age,"years old"))
}
# Create a variable myIntro by passing your variables myName and myAge into your introduction function
myIntro <- introduction(myName,myAge)
# Create a variable casualIntro by substituting "Hello, my name is ", with "Hey, I'm" in your myIntro variable
casualIntro <- paste("Hey, I'm", str_sub(myIntro,19,str_length(myIntro)))
# Create a new variable 'loud_intro', which is your myIntro variable in all upper-case letters
loud_intro <- toupper(myIntro)
# Create a new variable 'quiet_intro', which is your 'myIntro' variable in all lower-case letters
quite_intro <- tolower(myIntro)
# Create a new variable 'capitalized', which is your 'myIntro' variable with each word capitalized (hint: use the stringr function str_to_title)
capitalized <- str_to_title(myIntro)
# Using the stringr `str_count` function, create a variable `occurances` that stores the number of times the letter "e" appears in your `myIntro` variable
occurances <- str_count(myIntro, "e")
# Write another function `double` that takes in a variable and returns that variable times two
double <- function(height) {
return(height * 2)
}
# Create a variable `twenty` by passing the number 10 to your `double` function
twenty <- double(10)
# Write another function `third_power` that takes in a value and returns that value cubed
third_power <- function(length) {
return(length ^ 3)
}
# Create a variable `twenty_seven` by passing the number 3 to your `third_power` function
twenty_seven <- third_power(3)
# Vectors -------------------------------
# Create a vector movies that contains the names of six movies you like
movies <- c('pulp fiction','les miserables','one day','godfather','saw','minions')
# Create a vector top_three that only contains the first three movies in the vector
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
excited <- paste(movies," is a great movie!")
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- c(movies[1:3],movies[5:6])
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- 700:999
# Using the built in `length` function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
# Using the `mean` function, create a variable `num_mean` that is the mean of your vector `numbers`
num_mean <- mean(numbers)
View(any_drinking.csv)
View("anyDrinking")
View(anyDrinking)
#Set up
library(dplyr)
anyDrinking <- read.csv("data/any_drinking.csv")
bingeDrinking <- read.csv("data/binge_drinking.csv")
install.packages('jsonlite', 'knitr', 'dplyr')
install.packages('knitr')
install.packages('jsonlite')
---
title: "index"
output: html_document
---
```{r}
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <-
```
---
title: "index"
output: html_document
---
```{r}
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <-
```
---
title: "index"
output: html_document
---
```{r}
library(josnlite, knitr, dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <-
```
---
title: "index"
output: html_document
---
```{r}
library(josnlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <-
```
library(josnlite)
---
title: "index"
output: html_document
---
```{r}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <-
```
---
title: "index"
output: html_document
---
```{r}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
#num_repos <-
```
View(flattened)
---
title: "index"
output: html_document
---
```{r}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flatten, desc(forks))$name[1]
```
---
title: "index"
output: html_document
---
```{r}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
```
---
title: "index"
output: html_document
---
```{r}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
```
This is `r Github_name`.
It's got `r num_repos` repositories and the most popular one is `r most_popular`
---
title: "index"
output: html_document
---
```{r, echo=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
```
This is `r Github_name`.
It's got `r num_repos` repositories and the most popular one is `r most_popular`
---
title: "index"
output: html_document
---
```{r, echo=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
image <- user_data$avatar_url
```
This is `r Github_name`.
It's got `r num_repos` repositories and the most popular one is `r most_popular`
![image](`r image`)
---
title: "index"
output: html_document
---
```{r, echo=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
image <- user_data$avatar_url
```
This is `r Github_name`.
It's got `r num_repos` repositories and the most popular one is `r most_popular`
![image](`r image`)
```{r, echo=FALSE}
flattened$date_created = user_repos$created_at
format(flattened$date_created, "%Y-%m-%dT%TZ")
```
dates <- as.Date(flattened$created_at, "%Y-%m-%dT%TZ")
flattened$date_created <- user_repos$created_at
---
title: "index"
output: html_document
---
```{r, echo=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
access_token <- "1416493c5ecd53bc967eeee3d7703a8aea457527"
base <- "https://api.github.com/users/mkfreeman?access_token="
query_url <- paste0(base, access_token)
Github_name <- 'INFO-498F'
user_data <- fromJSON(query_url)
diff_url <- user_data$repos_url
desc_order <- paste0(diff_url, '?properties?created=desc&per_page=100')
user_repos <- fromJSON(desc_order)
flattened <- flatten(user_repos)
num_repos <- nrow(flattened)
most_popular <- arrange(flattened, desc(forks))$name[1]
image <- user_data$avatar_url
```
This is `r Github_name`.
It's got `r num_repos` repositories and the most popular one is `r most_popular`
![image](`r image`)
```{r, echo=FALSE}
dates <- as.Date(flattened$created_at, "%Y-%m-%dT%TZ")
flattened$date_created <- user_repos$created_at
```
install.packages('plotly')
#loading pacakges
library(dplyr)
library(knitr)
library(plotly)
library(ggplot2)
source('analysis.R')
#Setting working directory and reading in data
setwd("/Untitled/Users/yuyuezhu/info498f/a6-mapping-shootings")
mass_shootings <- read.csv("data/Mass-Shooting-Data.csv", stringsAsFactors = FALSE)
#Creating variables from mass shootings dataset about total shootings, killed, and injured.
total_shootings <- nrow(mass_shootings)
total_killed <- sum(mass_shootings$killed)
total_injured <- sum(mass_shootings$injured)
#Creating variables about most killed and injured in tersm of city and state
most_killed_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_killed = sum(killed)) %>%
most_killed_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_killed = sum(killed)) %>%
most_injured_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_injured = sum(injured)) %>%
most_injured_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_injured = sum(injured)) %>%
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r, echo=FALSE}
plot(cars)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
#loading pacakges
library(dplyr)
library(knitr)
library(plotly)
library(ggplot2)
source('analysis.R')
#Setting working directory and reading in data
setwd("/Untitled/Users/yuyuezhu/info498f/a6-mapping-shootings")
mass_shootings <- read.csv("data/Mass-Shooting-Data.csv", stringsAsFactors = FALSE)
#Creating variables from mass shootings dataset about total shootings, killed, and injured.
total_shootings <- nrow(mass_shootings)
total_killed <- sum(mass_shootings$killed)
total_injured <- sum(mass_shootings$injured)
#Creating variables about most killed and injured in tersm of city and state
most_killed_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_killed = sum(killed)) %>%
most_killed_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_killed = sum(killed)) %>%
most_injured_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_injured = sum(injured)) %>%
most_injured_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_injured = sum(injured)) %>%
#loading pacakges
library(dplyr)
library(knitr)
library(plotly)
library(ggplot2)
source('analysis.R')
#Setting working directory and reading in data
setwd("/Untitled/Users/yuyuezhu/info498f/a6-mapping-shootings")
mass_shootings <- read.csv("data/Mass-Shooting-Data.csv", stringsAsFactors = FALSE)
#Creating variables from mass shootings dataset about total shootings, killed, and injured.
total_shootings <- nrow(mass_shootings)
total_killed <- sum(mass_shootings$killed)
total_injured <- sum(mass_shootings$injured)
#Creating variables about most killed and injured in tersm of city and state
most_killed_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_killed = sum(killed)) %>%
most_killed_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_killed = sum(killed)) %>%
most_injured_state <- mass_shootings %>%
group_by(state) %>%
summarise(addUp_injured = sum(injured)) %>%
most_injured_city <- mass_shootings %>%
group_by(city) %>%
summarise(addUp_injured = sum(injured)) %>%
library('iris')
library('shiny')
install.packages('shiny')
install.packages("shiny")
view(iris)
View(iris)
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp('info498f/a8-building-applications')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
